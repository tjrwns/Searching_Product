TtwLog.log( "-- [ S ] - member.admin.change_password__id():{uint}----------" );

//----------------------------------------------------------------------------------------------------;

//	DEFINE - FUNCTION;

//----------------------------------------------------------------------------------------------------;

/**
 * @function
 * @param {Collection} _col$member_session_log
 * @param {String} mid
 * @param {String} sid
 * @param {Object} d_ex date expire
 * @param {Object} d_l_si date list sign in
 */
var add__session_log = function( _col$member_session_log, mid, sid, d_ex, d_l_si ){ TtwLog.log( "Session log 추가" ); var _id = _col$member_session_log.find({}, { _id : 1 }).sort({ $natural : -1 }).limit( 1 ).toArray()[ 0 ]._id + 1; _col$member_session_log.insert({ _id : NumberInt( _id ), mid : mid, sid : sid, d_ex : d_ex, date : d_l_si }); };

/**
 * @function
 * @param {Collection} _col$member_session
 * @param {Object} oFind { _id : 0 }
 */
var destroy__session = function( _col$member_session, oFind ){ TtwLog.log( "Session 파괴" ); _col$member_session.update( oFind, { $set : { d_ex : null, sid : null } }, { upsert : false } ); };

/**
 * @function
 * @param {Collection} _col$member_date
 * @param {Object} oFind { _id : 0 }
 * @param {Date} date
 * @return {Object} d_l_si date_list_signin
 */
var update__date__lastSignIn = function( _col$member_date, oFind, date ){ TtwLog.log( "Sign In 시간 업데이트" ); var d = date ? date : new Date(); var d_l_si = { y : NumberInt( d.getFullYear() ), m : NumberInt( d.getMonth() + 1 ), d : NumberInt( d.getDate() ), ho : NumberInt( d.getHours() ), mi : NumberInt( d.getMinutes() ), se : NumberInt( d.getSeconds() )//, mil : NumberLong( d.getMilliseconds() )
	}; _col$member_date.update( oFind, { $set : { d_l_si : d_l_si } }, { upsert : false }); return d_l_si; };

/**
 * @function
 * @param {Collection} _col$member_session
 * @param {Object} oFind { _id : 0 }
 * @param {Date} d_ex date_expired
 * @param {String} sid session id
 */
var update__session__signin = function( _col$member_session, oFind, d_ex, sid ){ TtwLog.log( "새로운 Session ID 생성" ); _col$member_session.update( oFind, { $set : { d_ex : d_ex, sid : sid } }, { upsert : false } ); };

//----------------------------------------------------------------------------------------------------;

//	DEFINE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DATABASE;

//----------------------------------------------------------------------------------------------------;

var _db$member = db.getSiblingDB( "member" );

//----------------------------------------------------------------------------------------------------;

//	COLLECTION;

//----------------------------------------------------------------------------------------------------;

var _col$member_basic = _db$member.member_basic;//회원 정보;
var _col$member_date = _db$member.member_date;//회원 날짜 정보;
var _col$member_session = _db$member.member_session;//세션;
var _col$member_session_log = _db$member.member_session_log;//세션 로그;
var _col$member_webhook = _db$member.member_webhook;//웹훅 정보;

//----------------------------------------------------------------------------------------------------;

//	DOCUMENT;

//----------------------------------------------------------------------------------------------------;

var _doc$member_basic;
var _doc$member_session;

//----------------------------------------------------------------------------------------------------;

//	PARAMETER;

//----------------------------------------------------------------------------------------------------;

//----------;
//Parameter Object - find or findOne에서 사용;
var p0 = { _id : -1 };
var p1 = { mid : null };
var p2 = { sid : null };
//----------;


//--------------------------------------------------[ S ] - 치환 문자열;
var d = <!=data=!>;
	TtwLog.logjson( d );
//--------------------------------------------------[ E ] - 치환 문자열;


//----------------------------------------------------------------------------------------------------[ S ] - VALIDATION;
TtwLog.log( d.sid );
//수정 - 20171010_1157 - 송선우;
//if( "" == d.sid || null == d.sid || undefined == d.sid || 200 != d.sid.length )
if( "" == d.sid || null == d.sid || undefined == d.sid )
{
	TtwLog.log( new Error( "[ Validation ] - Check.-100 - 클라이언트에서 보낸 sid가 문제 있는 값임" ) );
	//return { r : 0, m : "sid가 문제 있는 값임" };
	TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
	return 0;
}
//----------------------------------------------------------------------------------------------------[ E ] - VALIDATION;


p1.mid = d.mid;
var _doc$member_basic = _col$member_basic.findOne( p1 );


//----------------------------------------------------------------------------------------------------[ S ] - Check.000 - member_basic.member id 존재 여부;
if( !_doc$member_basic )
{
	TtwLog.log( new Error( "Check.000 - mid 검색 - mid 없음") );

	TtwLog.log( new Error( "sign_in 실패" ) );
	//return { r : 0, m : "mid가 존재하지 않음" };
	TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
	return 0;
}
//----------------------------------------------------------------------------------------------------[ E ] - Check.000 - member_basic.member id 존재 여부;


//----------------------------------------------------------------------------------------------------[ S ] - Check.100 - member_basic.nSignInFail;
if( 5 <= _doc$member_basic.nSignInFail )
{
	TtwLog.log( new Error( "Check.100 - Sign In 실패 횟수 5회 이상" ) );
	//수정하기 - 20170313 - 송선우 - 실 서비스 시 주석 해제 하기;
	//개발하기 - 20170313 - 송선우 - 이부분 DB에 넣기;
	TtwLog.log( "관리자에게 재인증 요청 하기" );

	TtwLog.log( new Error( "sign_in 실패" ) );
	//return { r : 0, m : "비밀번호 인증 5회 이상 틀림" };
	TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
	return 0;
}
//----------------------------------------------------------------------------------------------------[ E ] - Check.100 - member_basic.nSignInFail;


//*///----------------------------------------------------------------------------------------------------[ S ] - Check.200 - member_basic.member password;
if( d.mpw != _doc$member_basic.mpw )
{
	TtwLog.log( new Error( "Check.200 - mpw 비교 - Password가 맞지 않음" ) );

	p0._id = _doc$member_basic._id;
	_col$member_basic.update( p0, { $set : { nSignInFail : NumberInt( ++_doc$member_basic.nSignInFail ) } }, { upsert : false } );//비번 인증 오류 횟수 추가;
	TtwLog.log( new Error( "sign in 실패 횟수 : " + _doc$member_basic.nSignInFail ) );

	TtwLog.log( new Error( "sign_in 실패" ) );
	//return{ r : 0, m : "password가 맞지 않음" };
	TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
	return 0;
}
//*///----------------------------------------------------------------------------------------------------[ E ] - Check.200 - member_basic.member password;


TtwLog.log( "클라이언트에서 보낸 sid로 member_session 검색" );
p2.sid = d.sid;
_doc$member_session = _col$member_session.findOne( p2 );


//----------------------------------------------------------------------------------------------------[ S ] - Check.300 - member_basic.member session id;
if( _doc$member_session )
{
	TtwLog.log( "Check.300 - sid 검색 - Session Document가 있음" );

	if( _doc$member_session.mid != d.mid )//Session ID의 mid와 요청한 mid가 같은지 체크
	{
		//----------세션 파괴;
		p0._id = _doc$member_session._id;
		destroy__session( _col$member_session, p0 );

		TtwLog.log( new Error( "sign_in 실패 - Session ID의 mid와 요청한 mid가 다름" ) );
		//return { r : 0, m : "Session ID의 mid와 요청한 mid가 다름" };
		TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
		return 0;
	}

	TtwLog.log( "session 의 expire date 확인" );
	var date_now = new Date();
	var date_expired = new Date( _doc$member_session.d_ex );
		TtwLog.log( "date_now : " + date_now + " - Date Now" );
		TtwLog.log( "date_expired : " + date_expired + " - Date - Expired" );

	if( date_now < date_expired )//세션 기간 남아있음;
	{
		//----------Sign In 성공 - Last sign_in 시간 업데이트;
		p0._id = _doc$member_session._id;
		var d_l_si = update__date__lastSignIn( _col$member_date, p0, date_now );

		//----------member_session_log 추가;
		add__session_log( _col$member_session_log, _doc$member_session.mid, _doc$member_session.sid, _doc$member_session.d_ex, d_l_si );//var _id = _col$member_session_log.find({}).sort({ $natural : -1 })._id + 1;_col$member_session_log.insert({ _id : NumberInt( _id ), mid : d.mid, sid : d.sid, d_ex : d.d_ex, date : d_l_si });

		//----------Sign In 성공;
		TtwLog.log( "sign_in 성공" );
		//return { r : 1, m : "sign_in 성공"};
		TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 1;" );
		return 1;
	}
	else//세션 기간 오버;
	{
		TtwLog.log( new Error( "Session 인증 시간 지남" ) );

		//----------세션 파괴;
		p0._id = _doc$member_session._id;
		destroy__session( _col$member_session, p0 );

		TtwLog.log( new Error( "sign_in 실패" ) );
		//return { r : 0, m : "Session 인증 시간 지남" };
		TtwLog.log( "-- [ E ] - member.common.sign_in():{uint}----------return 0;" );
		return 0;
	}
}
//----------------------------------------------------------------------------------------------------[ E ] - Check.300 - member_basic.member session id;

	p0._id = d._id;
	var r = _col$member_basic.update( p0, { $set : { mpw : d.mpw } } );

return r;

TtwLog.log( "-- [ E ] - member.admin.change_password__id():{uint}----------return 0;" );
//return { r : 0, m : "mid는 존재함 - 알수 없는 에러" };
return 0;