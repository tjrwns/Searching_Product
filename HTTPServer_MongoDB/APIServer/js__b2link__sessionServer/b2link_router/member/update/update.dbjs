AlexLog.log( "-- [ S ] - member.update.update():{uint}----------" );

//----------------------------------------------------------------------------------------------------;

//	FUNCTION - REQUIRE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	FUNCTION - DEFINE;

//----------------------------------------------------------------------------------------------------;

//--------------------------------------------------;

/**
 * @function
 * @param {Object} d
 * @return {Object}
 */
function update__member_basic( d )
{
	AlexLog.log( "update__member_basic( d )" );

	p1.mid = d.mid;
	var doc = _col$member_basic.findOne( p1 );

	doc.cd$country = d.cd$country ? d.cd$country : doc.cd$country;
	doc.cd$category_division = d.cd$category_division ? d.cd$category_division : doc.cd$category_division;
	doc.cd$category_division_team = d.cd$category_division_team ? d.cd$category_division_team : doc.cd$category_division_team;
	doc.cd$category_division_part = d.cd$category_division_part ? d.cd$category_division_part : doc.cd$category_division_part;

	doc.phone_cell = { f : d.phone_cell.f, c : d.phone_cell.c, a : d.phone_cell.a, n0 : d.phone_cell.n0, n1 : d.phone_cell.n1 };
	doc.phone_tel = { f : d.phone_tel.f, c : d.phone_tel.c, a : d.phone_tel.a, n0 : d.phone_tel.n0, n1 : d.phone_tel.n1 };

	doc.messenger = { cd$messenger : d.messenger.cd$messenger, id : d.messenger.id };

	doc.nm = { a : d.nm.a , f : d.nm.f , l : d.nm.l	};
	doc.nm_cn = { a : d.nm_cn.a, f : d.nm_cn.f, l : d.nm_cn.l };
	doc.nm_kr = { a : d.nm_kr.a, f : d.nm_kr.f, l : d.nm_kr.l };
	doc.nm_us = { a : d.nm_us.a, f : d.nm_us.f, l : d.nm_us.l };

	return _col$member_basic.update( p1, doc );
}

/**
 * @function
 * @param {Object} d
 * @return {Object}
 */
function update__member_public( d )
{
	AlexLog.log( "update__member_public( d )" );
	
	p2.email = d.mid;
	var doc = _col$member_public.findOne( p2 );

	doc.cd$country = d.cd$country ? d.cd$country : doc.cd$country;
	doc.cd$category_division = d.cd$category_division ? d.cd$category_division : doc.cd$category_division;
	doc.cd$category_division_team = d.cd$category_division_team ? d.cd$category_division_team : doc.cd$category_division_team;
	doc.cd$category_division_part = d.cd$category_division_part ? d.cd$category_division_part : doc.cd$category_division_part;

	doc.phone_cell = { f : d.phone_cell.f, c : d.phone_cell.c, a : d.phone_cell.a, n0 : d.phone_cell.n0, n1 : d.phone_cell.n1 };
	doc.phone_tel = { f : d.phone_tel.f, c : d.phone_tel.c, a : d.phone_tel.a, n0 : d.phone_tel.n0, n1 : d.phone_tel.n1 };

	doc.messenger = { cd$messenger : d.messenger.cd$messenger, id : d.messenger.id };

	doc.nm = { a : d.nm.a , f : d.nm.f , l : d.nm.l	};
	doc.nm_cn = { a : d.nm_cn.a, f : d.nm_cn.f, l : d.nm_cn.l };
	doc.nm_kr = { a : d.nm_kr.a, f : d.nm_kr.f, l : d.nm_kr.l };
	doc.nm_us = { a : d.nm_us.a, f : d.nm_us.f, l : d.nm_us.l };

	return _col$member_public.update( p2, doc );
}

/**
 * @function
 * @param {Object} d
 * @return {Object}
 */
function update__member_webhook( d )
{
	AlexLog.log( "update__member_webhook( d )" );

	p1.mid = d.mid;
	var doc = _col$member_webhook.findOne( p1 );

	var webhooks = d.webhooks;
	var i=0, iLen=webhooks.length;
	for( ; i<iLen; i++ )
	{
		var webhook = webhooks[i];
		webhook.use_check = NumberInt( webhook.use_check );
	}

	doc.webhook = webhooks;

	return _col$member_webhook.update( p1, doc );
}

//--------------------------------------------------;

//--------------------------------------------------;

//--------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DEFINE;

//----------------------------------------------------------------------------------------------------;

//----------------------------------------------------------------------------------------------------;

//	DATABASE;

//----------------------------------------------------------------------------------------------------;

var _db$_schema = db.getSiblingDB( "_schema" );
var _db$member = db.getSiblingDB( "member" );

//----------------------------------------------------------------------------------------------------;

//	COLLECTION;

//----------------------------------------------------------------------------------------------------;

var _col$member = _db$_schema.member;
var _col$member_basic = _db$member.member_basic;//회원 정보;
var _col$member_public = _db$member.member_public;//회원 public 정보;
var _col$member_webhook = _db$member.member_webhook;//회원 webhook 정보;

//----------------------------------------------------------------------------------------------------;

//	DOCUMENT;

//----------------------------------------------------------------------------------------------------;

var _doc$member;
var _doc$member_basic;

//----------------------------------------------------------------------------------------------------;

//	PARAMETER;

//----------------------------------------------------------------------------------------------------;

//----------;
//Parameter Object - find or findOne에서 사용;
var p0 = { _id : -1 };
var p1 = { mid : null };
var p2 = { email : null };
//----------;


//--------------------------------------------------[ S ] - 치환 문자열;
var d = <!=data=!>;
	AlexLog.logjson( d );
//--------------------------------------------------[ E ] - 치환 문자열;


//----------------------------------------------------------------------------------------------------[ S ] - Check.000 - member_basic.member id 존재 여부;
p1.mid = d.mid;
_doc$member_basic = _col$member_basic.findOne( p1 );
if( !_doc$member_basic )
{
	AlexLog.log( new Error( "Check.000 - mid 검색 - mid 없음") );

	AlexLog.log( new Error( "update 실패 - " ) );
	AlexLog.log( "-- [ E ] - member.update.update():{uint}----------return 0;" );
	return 0;
}
//----------------------------------------------------------------------------------------------------[ E ] - Check.000 - member_basic.member id 존재 여부;


//----------------------------------------------------------------------------------------------------[ S ] - VALIDATION;

//...;

//----------------------------------------------------------------------------------------------------[ E ] - VALIDATION;

var r0 = update__member_basic( d );
var r1 = update__member_public( d );
var r2 = update__member_webhook( d );

AlexLog.log( "update 성공" );
AlexLog.log( "-- [ E ] - member.update.update():{uint}----------return 1;" );
return 1;